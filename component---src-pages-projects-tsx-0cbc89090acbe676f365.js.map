{"version":3,"sources":["webpack:///./src/components/skills.tsx","webpack:///./src/components/list/listItem.tsx","webpack:///./src/components/list/list.tsx","webpack:///./src/pages/projects.tsx"],"names":["skillsList","js","faJs","reactjs","faReact","scss","faSass","css","faCss3Alt","html","faHtml5","git","faGitAlt","github","faGithub","gatsby","attr","xmlns","xmlnsXlink","focusable","width","height","style","msTransform","WebkitTransform","transform","preserveAspectRatio","viewBox","cont","path","d","fill","csharp","sql","notAwesome","Skills","props","newSkills","skills","Object","keys","list","notSkills","filter","element","includes","map","key","indexOf","title","replace","className","concat","src","alt","icon","ListItem","children","React","createElement","tag","text","List","items","length","listItems","x","index","containerClass","order","Project","useState","isOpen","setIsOpen","id","class","imgPath","lang","projectDesc","assume","extra","href","target","rel","onClick","event","link","Projects","useLanguageContext","projectLinks","json","projects"],"mappings":"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","file":"component---src-pages-projects-tsx-0cbc89090acbe676f365.js","sourcesContent":["import React from \"react\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport {\r\n  faJs,\r\n  faCss3Alt,\r\n  faHtml5,\r\n  faSass,\r\n  faReact,\r\n  faGithub,\r\n  faGitAlt,\r\n} from \"@fortawesome/free-brands-svg-icons\"\r\n\r\nimport \"./skills.scss\"\r\n\r\nconst gatsbySVG = {\r\n  attr: {\r\n    xmlns: \"http://www.w3.org/2000/svg\",\r\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\r\n    \"aria-hidden\": \"true\",\r\n    focusable: \"false\",\r\n    width: \"1em\",\r\n    height: \"1em\",\r\n    style: {\r\n      msTransform: \"rotate(360deg)\",\r\n      WebkitTransform: \"rotate(360deg)\",\r\n      transform: \"rotate(360deg)\",\r\n    },\r\n    preserveAspectRatio: \"xMidYMid meet\",\r\n    viewBox: \"0 0 24 24\",\r\n  },\r\n  cont: {\r\n    path: {\r\n      d:\r\n        \"M12.001.007C5.326.007.007 5.326.007 12S5.326 23.995 12 23.995s11.994-5.319 11.994-11.994S18.676.007 12.001.007zM2.614 12.105l9.283 9.283c-5.111 0-9.283-4.172-9.283-9.283zm11.473 9.074L2.823 9.915C3.76 5.743 7.516 2.614 12 2.614a9.476 9.476 0 0 1 7.614 3.86L18.259 7.62a7.657 7.657 0 0 0-6.362-3.337A7.555 7.555 0 0 0 4.7 9.393l9.804 9.805c2.4-.835 4.276-2.92 4.798-5.424h-4.068v-1.773h6.154c0 4.485-3.129 8.24-7.301 9.178z\",\r\n      fill: \"#663399\",\r\n    },\r\n  },\r\n}\r\n\r\ntype propsType = {\r\n  className?: string\r\n  skills?: Array<string>\r\n  notSkills?: Array<string>\r\n}\r\n\r\nconst skillsList = {\r\n  js: faJs,\r\n  reactjs: faReact,\r\n  scss: faSass,\r\n  css: faCss3Alt,\r\n  html: faHtml5,\r\n  git: faGitAlt,\r\n  github: faGithub,\r\n  gatsby: gatsbySVG,\r\n  csharp: \"csharpIMG\",\r\n  sql: \"sqlIMG\",\r\n}\r\n\r\nconst notAwesome = [\"gatsby\", \"csharp\", \"sql\"]\r\n\r\nconst Skills = (props: propsType) => {\r\n  const newSkills = props.skills ? props.skills : Object.keys(skillsList)\r\n  const skills = !props.notSkills\r\n    ? newSkills\r\n    : newSkills.filter(element => !props.notSkills.includes(element))\r\n  const list = skills.map(key => {\r\n    if (notAwesome.indexOf(key) != -1) {\r\n      if (typeof skillsList[key] == \"string\") {\r\n        let title = key.replace(/(IMG)$/, \"\")\r\n        return (\r\n          <span key={key} className={key.concat(\" skill-style image\")}>\r\n            <img\r\n              src={\"/icons/\".concat(title, \".png\")}\r\n              title={title}\r\n              alt={title}\r\n            ></img>\r\n          </span>\r\n        )\r\n      }\r\n      return (\r\n        <span key={key} className={key.concat(\" skill-style \")}>\r\n          <svg {...skillsList[key][\"attr\"]}>\r\n            <path {...skillsList[key].cont[\"path\"]}></path>\r\n          </svg>\r\n        </span>\r\n      )\r\n    } else\r\n      return (\r\n        <span key={key} className={key.concat(\" skill-style \")}>\r\n          <FontAwesomeIcon icon={skillsList[key]} />\r\n        </span>\r\n      )\r\n  })\r\n\r\n  return <div className={\"skills \".concat(props.className || \"\")}>{list}</div>\r\n}\r\n\r\nexport default Skills\r\n","import React from \"react\"\r\n\r\nexport default function ListItem({ children, ...props }) {\r\n  if (typeof children === \"object\")\r\n    return <li>{React.createElement(children.tag, {}, children.text)}</li>\r\n  return <li>{children}</li>\r\n}\r\n","import React from \"react\"\r\nimport ListItem from \"./listItem\"\r\n\r\ntype PropsItemType =\r\n  | String\r\n  | JSX.Element\r\n  | HTMLElement\r\n  | { text: string; tag: string }\r\ntype PropsItemArrayType = PropsItemType[]\r\n\r\ntype PropsType = {\r\n  items: PropsItemArrayType\r\n  order?: boolean\r\n  containerClass?: string\r\n}\r\n\r\nexport default function List(props: PropsType) {\r\n  const items: PropsItemArrayType = props.items\r\n  if (items.length > 0) <></>\r\n  const itemGenerator = (x: PropsItemType, index) => {\r\n    return <ListItem key={index}>{x}</ListItem>\r\n  }\r\n  const listItems = items.map(itemGenerator)\r\n\r\n  return (\r\n    <div className={props.containerClass}>\r\n      {props.order ? <ol>{listItems}</ol> : <ul>{listItems}</ul>}\r\n    </div>\r\n  )\r\n}\r\n","import { Link } from \"gatsby\"\r\nimport React, { useState } from \"react\"\r\nimport List from \"../components/list/list\"\r\nimport Skills from \"../components/skills\"\r\nimport json from \"../data/projects.json\"\r\nimport { useLanguageContext } from \"../hooks/useLanguageContext\"\r\nimport \"./projects.scss\"\r\n\r\nconst Project = props => {\r\n  const [isOpen, setIsOpen] = useState(false)\r\n  const onClick = event => {\r\n    setIsOpen(!isOpen)\r\n  }\r\n\r\n  return (\r\n    <article className=\"project\" id={props.element.class}>\r\n      <div>\r\n        <h4>{props.element.title}</h4>\r\n        <Skills skills={props.element.skills} />\r\n      </div>\r\n      <div className=\"flex\">\r\n        <img\r\n          src={props.element.imgPath}\r\n          alt={props.element.title}\r\n          title={props.element.title}\r\n        />\r\n        <div>\r\n          <div className={\"folder \".concat(isOpen ? \"open\" : \"\")}>\r\n            <div>\r\n              <p>{props.element[props.lang].projectDesc}</p>\r\n              <List items={props.element[props.lang].assume} order={false} />\r\n              {props.element.extra != null ? (\r\n                <a\r\n                  href={props.element.extra.href}\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                  title={props.element.extra.title[props.lang]}\r\n                >\r\n                  {props.element.extra.title[props.lang]}\r\n                </a>\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </div>\r\n            <button onClick={onClick}>{isOpen ? \"/\\\\\" : \"\\\\/\"}</button>\r\n          </div>\r\n          <div className=\"links\">\r\n            <a\r\n              href={props.element.link}\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n              title={props.element.title}\r\n            >\r\n              {\"Live ->\"}\r\n            </a>\r\n            <a\r\n              href={props.element.git}\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n              title={props.element.title}\r\n            >\r\n              {\"Code ->\"}\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </article>\r\n  )\r\n}\r\n\r\nconst Projects = () => {\r\n  const langContext = useLanguageContext()\r\n  const lang = langContext.lang\r\n  const projectLinks = json.projects\r\n\r\n  return (\r\n    <section className=\"projects\">\r\n      {projectLinks.map(element => {\r\n        return <Project key={element.class} element={element} lang={lang} />\r\n      })}\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Projects\r\n"],"sourceRoot":""}